 typedef struct
{
	char Name[16]; // 0
    BYTE CapeInfo; // 16
	BYTE Merchant; // 17
    WORD GuildIndex; //18
    BYTE ClassInfo; // 20
	
    struct
    {
        BYTE SlowMov : 1;
        BYTE DrainHP : 1;
        BYTE VisionDrop : 1;
        BYTE Evasion : 1;
        BYTE Snoop : 1;
        BYTE SpeedMov : 1;
        BYTE SkillDelay : 1;
        BYTE Resist : 1;
    } AffectInfo; // 21

    WORD QuestInfo; // 22
    DWORD Gold; // 24
    DWORD Exp; // 28

    STRUCT_POSITION LastPosition; // 32

    STRUCT_SCORE bStatus; // 36
	STRUCT_SCORE Status; // 64

    STRUCT_ITEM Equip[16]; // 92
	STRUCT_ITEM Inventory[64]; // 220

    DWORD Learn; // 732

    WORD StatusPoint, // 736
		 MasterPoint, // 738
		 SkillPoint; // 740

	BYTE Critical; // 742
    BYTE SaveMana; // 743

    BYTE SkillBar[4]; // 744

    BYTE GuildMemberType; // 748
    BYTE MagicIncrement; // 749

    BYTE RegenHP, // 750
		 RegenMP; // 751

	BYTE Resist1[4];// 752 

}Npc_Summon;


st_BeastBonus pSummonBonus[50] = {

	 { 80, 300, 50, 75, 100, 400, 0, 0, 0, 0, 0, 7, 0, 0, 100, 100, 5 },

	 { 80, 250, 50, 150, 125, 400, 0, 0, 0, 0, 0, 7, 0, 0, 100, 100, 20 },

	 { 80, 400, 50, 125, 125, 400, 0, 0, 0, 0, 0, 6, 0, 0, 100, 100, 20 },

	 { 80, 350, 50, 200, 150, 400, 0, 0, 0, 0, 0, 6, 0, 0, 100, 100, 70 },

	 { 80, 500, 50, 175, 150, 400, 0, 0, 0, 0, 0, 6, 0, 0, 100, 100, 90 },

	 { 80, 450, 50, 250, 175, 400, 0, 0, 0, 0, 0, 6, 0, 0, 100, 100, 110 },

	 { 100, 500, 50, 250, 174, 400, 0, 0, 0, 0, 0, 6, 0, 0, 100, 100, 140 },

	 { 130, 250, 60, 200, 180, 250, 0, 0, 0, 0, 6, 0, 0, 100, 100, 160, 0 }
 };
 //tabela estranha se puderem conferir e.e
 int MountCon[30] = 
 { 
	 0,
	 800,
	 900,
	 -800,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 600,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0,
	 0
 };
int GenerateSummon(int User,int SummonId, STRUCT_ITEM *Item)
{
	int Leader = pMob[User].Leader;

	if(Leader <= 0)
		Leader = User;

	int mobId = GetEmptyNPCMob();

	if(mobId == 0)
	{
		SendClientMessage(User,"No EmpytMobNPC");
		return 0;
	}

	if(SummonId < 0 || SummonId >= 50)
		return 0;
	
	int summonFaceId = pSummon[SummonId].Equip[0].Index;
	
	int LOCAL4 = 0;

	int ptCont = 0;
	
	for(int i = 0; i < 12; i++)
	{
		int memberId = pMob[Leader].PartyList[i];

		if(memberId == 0)
			continue;

		ptCont ++;

		if(memberId > 0 || memberId < 30000)
		{
			if(pMob[memberId].Equip[0].Index == summonFaceId)
			{
				if(SummonId < 28)
				{
					int tX = pMob[User].Target.X;
					int tY = pMob[User].Target.Y;
					
					if(!GetEmptyMobGrid(memberId,&tX,&tY))
						return 0;

					pAction sm;

					GetAction(memberId,tX,tY,&sm);

					sm.mSpeed = 6;
					sm.mType = 8;

					GridMulticast_OL1(memberId,tX,tY,(MSG_STANDARD*)&sm);
					return 0;
				}
			}
		}
	}

	int idxPt;

	for(idxPt = 0;idxPt< 12; idxPt++)
	{
		//EBP - 60
		int idx = pMob[Leader].PartyList[idxPt];

		if(idx == 0)
			break;
	}

	if(idxPt >= 12)
	{
		//7D1658
		SendClientMessage(User,"Não é possivel envocar com grupo cheio");
		return 0;
	}
	
	memset(&pMob[mobId].PartyList, 0, 24);

	memcpy(&pMob[mobId],&pSummon[SummonId], sizeof Npc_Summon);
	
	pMob[mobId].bStatus = pMob[User].bStatus;

	strcat(pMob[mobId].Name,"^");

	for(int i=0; i<16; i++)
		if(pMob[mobId].Name[i] == 95)
			pMob[mobId].Name[i] = 32;
	

	memset(&pMob[mobId].Affect, 0, sizeof(STRUCT_AFFECT) * 4);

	int sINT = pMob[User].Status.INT;
	
	int sMast = pMob[User].Status.Master[2];

	int calcInt = pSummonBonus[SummonId].damageMin * sINT / 100;
	

	int calcMast = pSummonBonus[SummonId].damageMax * sMast / 100;

	pMob[mobId].bStatus.Attack = pMob[mobId].bStatus.Attack + calcInt + calcMast;

	calcInt = pSummonBonus[SummonId].defMin * sINT / 100;

	calcMast = pSummonBonus[SummonId].defMax * sMast / 100;

	pMob[mobId].bStatus.Defense = pMob[mobId].bStatus.Defense + calcInt + calcMast;

	calcInt = pSummonBonus[SummonId].minHP * sINT / 100;
	calcMast = pSummonBonus[SummonId].maxHP * sMast / 100;

	pMob[mobId].bStatus.maxHP = pMob[mobId].bStatus.maxHP + calcInt + calcMast;
	
	pMob[mobId].Status.maxHP = pMob[mobId].bStatus.maxHP;
	pMob[mobId].GenerateID = -1;
	pMob[mobId].Formation = 5;
	pMob[mobId].RouteType = 5;
	pMob[mobId].Mode = 4;
	pMob[mobId].Segment.Progress = 0;
	pMob[mobId].Segment.Direction = 0;

	memset(&pMob[mobId].Segment.ListX, 0 , 5 * sizeof(int));
	memset(&pMob[mobId].Segment.ListY, 0 , 5 * sizeof(int));

	pMob[mobId].Leader = Leader;
	pMob[mobId].Last.Time = GetCurrentTime(); //Original CurrentTime


	//Não entendi essa parte
	if(Item != 0)
	{
		int ret = BASE_GetItemAbility(Item,EF_MOUNTSANC);

		if(ret >= 100)
			ret = 100;

		int faceId = pMob[mobId].Equip[0].Index;
		
		int Con = 0;

		if(faceId >= 315 && faceId < 345)
		{
			int result = 30 - (345 - faceId);

			int valCon = MountCon[result];
			
			int calc1 = (valCon / 2) - 1000;
			
			int calc2 = valCon - calc1;
			
			Con = (calc2 * ret) / 100 + calc1;

			pMob[mobId].bStatus.CON = Con;
			pMob[mobId].Status.CON = Con;

			int retn = BASE_GetItemAbility(Item,EF_MOUNTSANC);

			pMob[mobId].bStatus.Attack = pMob[mobId].bStatus.Attack + ((retn & 255) * 6);
			pMob[mobId].Status.Attack = pMob[mobId].bStatus.Attack;
		}
	}

	if(pMob[User].GuildDisable == 0)
		pMob[mobId].Equip[12].EF2 = pMob[User].Equip[12].EF2;

	GetGuild_OL1(mobId);

	if(pMob[mobId].Equip[12].Index == 509)
		pMob[mobId].Equip[12].Index = 508;
	

	pMob[mobId].Status.curHP = pMob[mobId].Status.maxHP;

	if(1)
	{
		if(pMob[User].Equip[15].Index == 543 || pMob[User].Equip[15].Index == 545)
		{
			memset(&pMob[mobId].Equip[15], 0, sizeof(STRUCT_ITEM));
			pMob[mobId].Equip[15].Index = 734;
		}

		if(pMob[User].Equip[15].Index == 544 || pMob[User].Equip[15].Index == 546)
		{
			memset(&pMob[mobId].Equip[15], 0, sizeof(STRUCT_ITEM));
			pMob[mobId].Equip[15].Index = 735;
		}

		if(pMob[User].Equip[15].Index == 548 || pMob[User].Equip[15].Index == 549)
		{
			memset(&pMob[mobId].Equip[15], 0, sizeof(STRUCT_ITEM));
			pMob[mobId].Equip[15].Index = 550;
		}
	}
	
	pMob[mobId].CapeInfo = 4;
	
	pMob[mobId].GetCurrentScore(MAX_USER);
	
	memset(&pMob[mobId].EnemyList, 0, sizeof(short) * 4);

	int X = pMob[User].Target.X;
	int Y = pMob[User].Target.Y;

	int retMobGrid = GetEmptyMobGrid(mobId,&X,&Y);

	if(retMobGrid == 0)
	{
		pMob[mobId].Mode = 0;
		return 0;
	}

	pMob[mobId].Target.X = X;
	pMob[mobId].Last.X = X;

	pMob[mobId].Target.Y = Y;
	pMob[mobId].Last.Y = Y;

	if(Item == NULL)
	{
		pMob[mobId].Affect[0].Index = 24;
		pMob[mobId].Affect[0].Master = 0;
		pMob[mobId].Affect[0].Value = 0;
		pMob[mobId].Affect[0].Time = 20;

		if(SummonId >= 28 && SummonId <= 37)
			pMob[mobId].Affect[0].Time = 128;
	}
	
	if(Item != NULL)
	{
		if(*(WORD*)Item->EF1 > pMob[mobId].Status.maxHP)
			*(WORD*)Item->EF1 = pMob[mobId].Status.maxHP;
	

		pMob[mobId].bStatus.curHP = *(WORD*)Item->EF1;

		pMob[mobId].Status.curHP = pMob[mobId].bStatus.curHP;

	}
	BYTE sm[108];

	GetCreateMob(mobId,(BYTE*)&sm);

	*(WORD*)&sm[104] = (*(WORD*)&sm[104] & 0xFFFF) | 3;
	
	pMobGrid[Y][X] = mobId;

	GridMulticast_OL2(X,Y,(BYTE*)&sm, 0);

	int MobId = mobId;
	
	pMob[Leader].PartyList[idxPt] = MobId;

	GetMobFromIndex(MobId)->Leader = Leader;

	if(ptCont == 0)
		SendAddParty(Leader,Leader,0);

	SendAddParty(MobId,Leader,0);

	if(ptCont == 0)
		SendAddParty(MobId,MobId,idxPt + 1);
	

	SendAddParty(Leader,MobId,idxPt + 1);

	for(int i=0; i<12; i++)
	{
		int partyID = pMob[Leader].PartyList[i];

		if(partyID == 0)
			continue;

		if(partyID != MobId)
			SendAddParty(partyID,MobId,i + 1);

		SendAddParty(MobId,partyID,i + 1);
	}

	pMob[mobId].Summoner = User;

	return 1;
}